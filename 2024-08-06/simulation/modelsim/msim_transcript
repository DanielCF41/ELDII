# do edge_detector1_run_msim_rtl_vhdl.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Copying /opt/intelFPGA/20.1/modelsim_ae/linuxaloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vcom -93 -work work {/home/daniel.f2005/QUARTUS/ELD-II/2024-08-06/edge_detector1.vhd}
# Model Technology ModelSim - Intel FPGA Edition vcom 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:05:35 on Aug 06,2024
# vcom -reportprogress 300 -93 -work work /home/daniel.f2005/QUARTUS/ELD-II/2024-08-06/edge_detector1.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity edge_detector1
# -- Compiling architecture moore_arch of edge_detector1
# End time: 11:05:35 on Aug 06,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# 
# stdin: <EOF>
vsim work.edge_detector1
# vsim work.edge_detector1 
# Start time: 11:05:38 on Aug 06,2024
# //  ModelSim - Intel FPGA Edition 2020.1 Feb 28 2020 Linux 4.19.0-27-amd64
# //
# //  Copyright 1991-2020 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim - Intel FPGA Edition and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.edge_detector1(moore_arch)
add wave -position end  sim:/edge_detector1/clk
add wave -position end  sim:/edge_detector1/reset
add wave -position end  sim:/edge_detector1/state_next
add wave -position end  sim:/edge_detector1/state_reg
add wave -position 2  sim:/edge_detector1/strobe
add wave -position 3  sim:/edge_detector1/p1
force -freeze sim:/edge_detector1/reset 1 0
force -freeze sim:/edge_detector1/reset 1 0, 0 20
force -freeze sim:/edge_detector1/clk 1 0, 0 {50 ps} -r 100
force -freeze sim:/edge_detector1/strobe 0 0
run 500
force -freeze sim:/edge_detector1/strobe 1 0
force -freeze sim:/edge_detector1/strobe 1 0, 0 50
run
run
run 50
force -freeze sim:/edge_detector1/strobe 1 0, 0 60
run 
run
force -freeze sim:/edge_detector1/strobe 1 0, 0 330
run 500
write format wave -window .main_pane.wave.interior.cs.body.pw.wf /home/daniel.f2005/QUARTUS/ELD-II/2024-08-06/simulation/modelsim/wave.do
do tb_edgep1.do
# ** Warning: (vlib-34) Library already exists at "rtl_work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# Model Technology ModelSim - Intel FPGA Edition vcom 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:16:31 on Aug 06,2024
# vcom -reportprogress 300 -93 -work work ../../edge_detector1.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity edge_detector1
# -- Compiling architecture moore_arch of edge_detector1
# End time: 11:16:31 on Aug 06,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 11:16:32 on Aug 06,2024, Elapsed time: 0:10:54
# Errors: 0, Warnings: 0
# vsim work.edge_detector1 
# Start time: 11:16:32 on Aug 06,2024
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.edge_detector1(moore_arch)
do tb_edgep1.do
# ** Warning: (vlib-34) Library already exists at "rtl_work".
# Model Technology ModelSim - Intel FPGA Edition vmap 2020.1 Lib Mapping Utility 2020.02 Feb 28 2020
# vmap work rtl_work 
# Modifying modelsim.ini
# Model Technology ModelSim - Intel FPGA Edition vcom 2020.1 Compiler 2020.02 Feb 28 2020
# Start time: 11:19:26 on Aug 06,2024
# vcom -reportprogress 300 -93 -work work ../../edge_detector1.vhd 
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity edge_detector1
# -- Compiling architecture moore_arch of edge_detector1
# End time: 11:19:26 on Aug 06,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# End time: 11:19:28 on Aug 06,2024, Elapsed time: 0:02:56
# Errors: 0, Warnings: 0
# vsim work.edge_detector1 
# Start time: 11:19:28 on Aug 06,2024
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading work.edge_detector1(moore_arch)
# End time: 11:20:52 on Aug 06,2024, Elapsed time: 0:01:24
# Errors: 0, Warnings: 0
